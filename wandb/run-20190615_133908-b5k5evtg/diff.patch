diff --git a/keras_cnn.py b/keras_cnn.py
index 879d732..07bc853 100644
--- a/keras_cnn.py
+++ b/keras_cnn.py
@@ -6,6 +6,7 @@ from keras.utils import np_utils
 from wandb.keras import WandbCallback
 import wandb
 import os
+import sys
 
 run = wandb.init()
 config = run.config
@@ -16,7 +17,7 @@ config.dropout = 0.2
 config.dense_layer_size = 128
 config.img_width = 28
 config.img_height = 28
-config.epochs = 10
+config.epochs = 20
 
 (X_train, y_train), (X_test, y_test) = mnist.load_data()
 
@@ -30,6 +31,7 @@ X_train = X_train.reshape(
     X_train.shape[0], config.img_width, config.img_height, 1)
 X_test = X_test.reshape(
     X_test.shape[0], config.img_width, config.img_height, 1)
+print(X_train.shape)
 
 # one hot encode outputs
 y_train = np_utils.to_categorical(y_train)
@@ -44,7 +46,7 @@ model.add(Conv2D(32,
                  input_shape=(28, 28, 1),
                  activation='relu'))
 model.add(MaxPooling2D(pool_size=(2, 2)))
-model.add(Dropout(0.4))
+#model.add(Dropout(0.4))
 model.add(Conv2D(64,
                  (3, 3),
                  activation='relu'))
@@ -59,6 +61,6 @@ model.compile(loss='categorical_crossentropy', optimizer='adam',
               metrics=['accuracy'])
 model.summary()
 
-model.fit(X_train, y_train, validation_data=(X_test, y_test),
+model.fit(X_train, y_train, batch_size=256, validation_data=(X_test, y_test),
           epochs=config.epochs,
           callbacks=[WandbCallback(data_type="image", save_model=False)])
